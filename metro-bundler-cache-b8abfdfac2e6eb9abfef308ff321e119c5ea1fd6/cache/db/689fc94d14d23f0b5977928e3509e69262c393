Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBaseProps = undefined;

var _isNaN2 = require("lodash/isNaN");

var _isNaN3 = _interopRequireDefault(_isNaN2);

var _without2 = require("lodash/without");

var _without3 = _interopRequireDefault(_without2);

var _defaults2 = require("lodash/defaults");

var _defaults3 = _interopRequireDefault(_defaults2);

var _omit2 = require("lodash/omit");

var _omit3 = _interopRequireDefault(_omit2);

var _keys2 = require("lodash/keys");

var _keys3 = _interopRequireDefault(_keys2);

var _assign2 = require("lodash/assign");

var _assign3 = _interopRequireDefault(_assign2);

var _victoryCore = require("victory-core");

var _d3Voronoi = require("d3-voronoi");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

var getVoronoi = function getVoronoi(props, range, scale) {
  var minRange = [Math.min.apply(Math, _toConsumableArray(range.x)), Math.min.apply(Math, _toConsumableArray(range.y))];
  var maxRange = [Math.max.apply(Math, _toConsumableArray(range.x)), Math.max.apply(Math, _toConsumableArray(range.y))];
  var angleAccessor = function angleAccessor(d) {
    var x = scale.x(d._x1 !== undefined ? d._x1 : d._x);
    return -1 * x + Math.PI / 2;
  };
  var xAccessor = function xAccessor(d) {
    return scale.x(d._x1 !== undefined ? d._x1 : d._x);
  };
  return (0, _d3Voronoi.voronoi)().x(function (d) {
    return props.polar ? angleAccessor(d) : xAccessor(d);
  }).y(function (d) {
    return scale.y(d._y1 !== undefined ? d._y1 : d._y);
  }).extent([minRange, maxRange]);
};

var getDataStyles = function getDataStyles(datum, style) {
  var numKeys = (0, _keys3.default)(datum).filter(function (k) {
    return (0, _isNaN3.default)(k);
  });
  var omitKeys = ["x", "y", "_x", "_y", "eventKey", "label"];
  var stylesFromData = (0, _omit3.default)(datum, [].concat(omitKeys, _toConsumableArray(numKeys)));
  return (0, _defaults3.default)({}, stylesFromData, style);
};

var getCalculatedValues = function getCalculatedValues(props) {
  var defaultStyles = props.theme && props.theme.voronoi && props.theme.voronoi.style ? props.theme.voronoi.style : {};
  var style = _victoryCore.Helpers.getStyles(props.style, defaultStyles);
  var data = _victoryCore.Data.getData(props);
  var range = {
    x: _victoryCore.Helpers.getRange(props, "x"),
    y: _victoryCore.Helpers.getRange(props, "y")
  };
  var domain = {
    x: _victoryCore.Domain.getDomain(props, "x"),
    y: _victoryCore.Domain.getDomain(props, "y")
  };
  var scale = {
    x: _victoryCore.Scale.getBaseScale(props, "x").domain(domain.x).range(range.x),
    y: _victoryCore.Scale.getBaseScale(props, "y").domain(domain.y).range(range.y)
  };
  var voronoi = getVoronoi(props, range, scale);
  var polygons = voronoi.polygons(data);
  var origin = props.polar ? props.origin || _victoryCore.Helpers.getPolarOrigin(props) : undefined;
  return { domain: domain, data: data, scale: scale, style: style, polygons: polygons, origin: origin };
};

var getBaseProps = function getBaseProps(props, fallbackProps) {
  var modifiedProps = _victoryCore.Helpers.modifyProps(props, fallbackProps, "scatter");
  props = (0, _assign3.default)({}, modifiedProps, getCalculatedValues(modifiedProps));
  var _props = props,
      data = _props.data,
      domain = _props.domain,
      events = _props.events,
      height = _props.height,
      origin = _props.origin,
      padding = _props.padding,
      polar = _props.polar,
      polygons = _props.polygons,
      scale = _props.scale,
      sharedEvents = _props.sharedEvents,
      standalone = _props.standalone,
      style = _props.style,
      theme = _props.theme,
      width = _props.width;

  var initialChildProps = { parent: {
      style: style.parent, scale: scale, domain: domain, data: data, standalone: standalone, height: height, width: width, theme: theme,
      origin: origin, polar: polar, padding: padding
    } };

  return data.reduce(function (childProps, datum, index) {
    var polygon = (0, _without3.default)(polygons[index], "data");
    var eventKey = datum.eventKey;

    var _Helpers$scalePoint = _victoryCore.Helpers.scalePoint(props, datum),
        x = _Helpers$scalePoint.x,
        y = _Helpers$scalePoint.y;

    var dataProps = {
      x: x, y: y, datum: datum, data: data, index: index, scale: scale, polygon: polygon, origin: origin,
      size: props.size,
      style: getDataStyles(datum, style.data)
    };

    childProps[eventKey] = { data: dataProps };
    var text = _victoryCore.LabelHelpers.getText(props, datum, index);
    if (text !== undefined && text !== null || events || sharedEvents) {
      childProps[eventKey].labels = _victoryCore.LabelHelpers.getProps(props, index);
    }

    return childProps;
  }, initialChildProps);
};

exports.getBaseProps = getBaseProps;