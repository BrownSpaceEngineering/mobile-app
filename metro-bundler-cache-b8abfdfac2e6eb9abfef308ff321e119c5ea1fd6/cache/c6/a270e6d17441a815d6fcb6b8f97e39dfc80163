"use strict";

function hex(ch) {
  return ch.charCodeAt(0).toString(16).toUpperCase();
}

var js = {
  stringEscape: function stringEscape(s) {
    return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\x08/g, '\\b').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\f/g, '\\f').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
      return '\\x0' + hex(ch);
    }).replace(/[\x10-\x1F\x7F-\xFF]/g, function (ch) {
      return '\\x' + hex(ch);
    }).replace(/[\u0100-\u0FFF]/g, function (ch) {
      return '\\u0' + hex(ch);
    }).replace(/[\u1000-\uFFFF]/g, function (ch) {
      return '\\u' + hex(ch);
    });
  },

  regexpClassEscape: function regexpClassEscape(s) {
    return s.replace(/\\/g, '\\\\').replace(/\//g, '\\/').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\v/g, '\\x0B').replace(/\f/g, '\\f').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
      return '\\x0' + hex(ch);
    }).replace(/[\x10-\x1F\x7F-\xFF]/g, function (ch) {
      return '\\x' + hex(ch);
    }).replace(/[\u0100-\u0FFF]/g, function (ch) {
      return '\\u0' + hex(ch);
    }).replace(/[\u1000-\uFFFF]/g, function (ch) {
      return '\\u' + hex(ch);
    });
  }
};

module.exports = js;