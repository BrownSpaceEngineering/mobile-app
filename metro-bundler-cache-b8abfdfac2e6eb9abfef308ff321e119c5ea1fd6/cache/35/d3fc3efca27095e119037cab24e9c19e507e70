Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBaseProps = undefined;

var _isNaN2 = require("lodash/isNaN");

var _isNaN3 = _interopRequireDefault(_isNaN2);

var _omit2 = require("lodash/omit");

var _omit3 = _interopRequireDefault(_omit2);

var _keys2 = require("lodash/keys");

var _keys3 = _interopRequireDefault(_keys2);

var _defaults2 = require("lodash/defaults");

var _defaults3 = _interopRequireDefault(_defaults2);

var _assign2 = require("lodash/assign");

var _assign3 = _interopRequireDefault(_assign2);

var _victoryCore = require("victory-core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

var getBarPosition = function getBarPosition(props, datum) {
  var getDefaultMin = function getDefaultMin(axis) {
    var defaultMin = _victoryCore.Scale.getType(props.scale[axis]) === "log" ? 1 / Number.MAX_SAFE_INTEGER : 0;
    return datum["_" + axis] instanceof Date ? new Date(defaultMin) : defaultMin;
  };
  var _y0 = datum._y0 !== undefined ? datum._y0 : getDefaultMin("y");
  var _x0 = datum._x0 !== undefined ? datum._x0 : getDefaultMin("x");
  return _victoryCore.Helpers.scalePoint(props, (0, _assign3.default)({}, datum, { _y0: _y0, _x0: _x0 }));
};

var getBarStyle = function getBarStyle(datum, baseStyle) {
  var numKeys = (0, _keys3.default)(datum).filter(function (k) {
    return (0, _isNaN3.default)(k);
  });
  var omitKeys = ["x", "y", "y0", "_x", "_y", "_y0", "name", "label", "eventKey"];
  var styleData = (0, _omit3.default)(datum, [].concat(omitKeys, _toConsumableArray(numKeys)));
  return (0, _defaults3.default)({}, styleData, baseStyle);
};

var getCalculatedValues = function getCalculatedValues(props) {
  var theme = props.theme,
      horizontal = props.horizontal,
      polar = props.polar;

  var defaultStyles = theme && theme.bar && theme.bar.style ? theme.bar.style : {};
  var style = _victoryCore.Helpers.getStyles(props.style, defaultStyles);
  var data = _victoryCore.Data.getData(props);
  var range = {
    x: _victoryCore.Helpers.getRange(props, "x"),
    y: _victoryCore.Helpers.getRange(props, "y")
  };
  var domain = {
    x: _victoryCore.Domain.getDomainWithZero(props, "x"),
    y: _victoryCore.Domain.getDomainWithZero(props, "y")
  };
  var xScale = _victoryCore.Scale.getBaseScale(props, "x").domain(domain.x).range(range.x);
  var yScale = _victoryCore.Scale.getBaseScale(props, "y").domain(domain.y).range(range.y);
  var scale = {
    x: horizontal ? yScale : xScale,
    y: horizontal ? xScale : yScale
  };
  var origin = polar ? props.origin || _victoryCore.Helpers.getPolarOrigin(props) : undefined;
  return { style: style, data: data, scale: scale, domain: domain, origin: origin };
};

var getBaseProps = function getBaseProps(props, fallbackProps) {
  var modifiedProps = _victoryCore.Helpers.modifyProps(props, fallbackProps, "bar");
  props = (0, _assign3.default)({}, modifiedProps, getCalculatedValues(modifiedProps));
  var _props = props,
      alignment = _props.alignment,
      barRatio = _props.barRatio,
      cornerRadius = _props.cornerRadius,
      data = _props.data,
      domain = _props.domain,
      events = _props.events,
      height = _props.height,
      horizontal = _props.horizontal,
      origin = _props.origin,
      padding = _props.padding,
      polar = _props.polar,
      scale = _props.scale,
      sharedEvents = _props.sharedEvents,
      standalone = _props.standalone,
      style = _props.style,
      theme = _props.theme,
      width = _props.width;

  var initialChildProps = { parent: {
      domain: domain, scale: scale, width: width, height: height, data: data, standalone: standalone,
      theme: theme, polar: polar, origin: origin, padding: padding, style: style.parent
    } };

  return data.reduce(function (childProps, datum, index) {
    var eventKey = datum.eventKey || index;

    var _getBarPosition = getBarPosition(props, datum),
        x = _getBarPosition.x,
        y = _getBarPosition.y,
        y0 = _getBarPosition.y0,
        x0 = _getBarPosition.x0;

    var barStyle = getBarStyle(datum, style.data);
    var dataProps = {
      alignment: alignment, barRatio: barRatio, cornerRadius: cornerRadius, data: data, datum: datum, horizontal: horizontal, index: index, padding: padding, polar: polar, origin: origin,
      scale: scale, style: barStyle, width: width, height: height, x: x, y: y, y0: y0, x0: x0
    };

    childProps[eventKey] = {
      data: dataProps
    };

    var text = _victoryCore.LabelHelpers.getText(props, datum, index);
    if (text !== undefined && text !== null || events || sharedEvents) {
      childProps[eventKey].labels = _victoryCore.LabelHelpers.getProps(props, index);
    }
    return childProps;
  }, initialChildProps);
};

exports.getBaseProps = getBaseProps;