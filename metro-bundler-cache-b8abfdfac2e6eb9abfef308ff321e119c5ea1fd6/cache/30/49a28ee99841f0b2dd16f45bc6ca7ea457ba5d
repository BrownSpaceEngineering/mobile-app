
'use strict';

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/Users/willem.speckmann/BSE/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  SwipeableFlatList: {
    displayName: 'SwipeableFlatList'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/willem.speckmann/BSE/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var PropTypes = require('prop-types');
var React = require('React');
var SwipeableRow = require('SwipeableRow');
var FlatList = require('FlatList');

var SwipeableFlatList = _wrapComponent('SwipeableFlatList')((_temp = _class = function (_React$Component) {
  _inherits(SwipeableFlatList, _React$Component);

  function SwipeableFlatList(props, context) {
    _classCallCheck(this, SwipeableFlatList);

    var _this = _possibleConstructorReturn(this, (SwipeableFlatList.__proto__ || Object.getPrototypeOf(SwipeableFlatList)).call(this, props, context));

    _this._flatListRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.state.openRowKey) {
        _this.setState({
          openRowKey: null
        });
      }

      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._renderItem = function (info) {
      var slideoutView = _this.props.renderQuickActions(info);
      var key = _this.props.keyExtractor(info.item, info.index);

      if (!slideoutView) {
        return _this.props.renderItem(info);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = true;
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: key === _this.state.openRowKey,
          maxSwipeDistance: _this._getMaxSwipeDistance(info),
          onOpen: function onOpen() {
            return _this._onOpen(key);
          },
          onClose: function onClose() {
            return _this._onClose(key);
          },
          shouldBounceOnMount: shouldBounceOnMount,
          onSwipeEnd: _this._setListViewScrollable,
          onSwipeStart: _this._setListViewNotScrollable, __source: {
            fileName: _jsxFileName,
            lineNumber: 137
          }
        },
        _this.props.renderItem(info)
      );
    };

    _this._setListViewScrollable = function () {
      _this._setListViewScrollableTo(true);
    };

    _this._setListViewNotScrollable = function () {
      _this._setListViewScrollableTo(false);
    };

    _this.state = {
      openRowKey: null
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    return _this;
  }

  _createClass(SwipeableFlatList, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(FlatList, _extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._flatListRef = _ref;
        },
        onScroll: this._onScroll,
        renderItem: this._renderItem,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 99
        }
      }));
    }
  }, {
    key: '_getMaxSwipeDistance',
    value: function _getMaxSwipeDistance(info) {
      if (typeof this.props.maxSwipeDistance === 'function') {
        return this.props.maxSwipeDistance(info);
      }

      return this.props.maxSwipeDistance;
    }
  }, {
    key: '_setListViewScrollableTo',
    value: function _setListViewScrollableTo(value) {
      if (this._flatListRef) {
        this._flatListRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(key) {
      this.setState({
        openRowKey: key
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(key) {
      this.setState({
        openRowKey: null
      });
    }
  }]);

  return SwipeableFlatList;
}(React.Component), _class.propTypes = _extends({}, FlatList.propTypes, {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderQuickActions: PropTypes.func.isRequired
}), _class.defaultProps = _extends({}, FlatList.defaultProps, {
  bounceFirstRowOnMount: true,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
}), _temp));

module.exports = SwipeableFlatList;